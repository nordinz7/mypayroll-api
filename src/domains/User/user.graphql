type User {
  uuid: UUID
  name: String!
  email: String!
  # password: String!
  createdAt: String!
  updatedAt: String!
  status: ActiveStatus
}

type Users {
  rows: [User]
  pageInfo: numberPagination
}

type Token {
  jwt: String
}

input UserQueryInput {
  q: String
  limit: Int
  offset: Int
}

input CreateUserInput {
  uuid: UUID
  name: String!
  email: String!
  password: String!
  confirmPassword: String!
}

input SignInInput {
  email: String!
  password: String!
}

type Query {
  user(uuid: UUID): User
  users(input: UserQueryInput): Users
}

type Mutation {
  createUser(input: CreateUserInput): User
  updateUser(input: CreateUserInput): User
  deleteUser(uuid: UUID): User
  unDeleteUser(uuid: UUID): User

  signIn(input: SignInInput): Token
  resetPassword(email: String!): Response
}
